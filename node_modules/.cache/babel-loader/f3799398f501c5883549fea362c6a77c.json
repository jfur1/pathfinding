{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/navbar.jsx\";\nimport React, { Component } from 'react';\nimport './navbar.css';\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  toggleDropdown() {\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  }\n\n  selectAlgo(id) {\n    this.toggleDropdown();\n    document.getElementById(\"startButton\").innerHTML = id;\n    return;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.toggleDropdown(),\n          class: \"dropbtn\",\n          children: \"Select an Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"myDropdown\",\n          class: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            id: \"dijkstraStart\",\n            onClick: () => this.selectAlgo(\"Dijkstra's Algorithm\"),\n            children: \"Dijkstra's Algorithm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            id: \"astarStart\",\n            onClick: () => this.selectAlgo(\"A* Search\"),\n            children: \"A* Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            id: \"bfsStart\",\n            onClick: () => this.selectAlgo(\"Breadth-First-Search\"),\n            children: \"BFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            id: \"dfsStart\",\n            onClick: () => this.selectAlgo(\"Depth-First-Search\"),\n            children: \"DFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Close the dropdown menu if the user clicks outside of it\n\nwindow.onclick = function (event) {\n  if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n    var i;\n\n    for (i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/navbar.jsx"],"names":["React","Component","Navbar","constructor","props","state","value","handleChange","event","setState","target","toggleDropdown","document","getElementById","classList","toggle","selectAlgo","id","innerHTML","render","window","onclick","matches","dropdowns","getElementsByClassName","i","length","openDropdown","contains","remove"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAEzCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACE;AAAd,KAAb;AACH;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAO;AACf,SAAKC,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AAArB,KAAd;AACH;;AAEDK,EAAAA,cAAc,GAAE;AAEZC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,CAAgDC,MAAhD,CAAuD,MAAvD;AACH;;AAEDC,EAAAA,UAAU,CAACC,EAAD,EAAI;AACV,SAAKN,cAAL;AACAC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCK,SAAvC,GAAmDD,EAAnD;AACA;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKR,cAAL,EAAvB;AAA8C,UAAA,KAAK,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,EAAE,EAAC,YAAR;AAAqB,UAAA,KAAK,EAAC,kBAA3B;AAAA,kCACI;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,EAAE,EAAC,eAAf;AAA+B,YAAA,OAAO,EAAE,MAAM,KAAKK,UAAL,CAAgB,sBAAhB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,EAAE,EAAC,YAAf;AAA4B,YAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,WAAhB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,EAAE,EAAC,UAAf;AAA0B,YAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,sBAAhB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAG,YAAA,IAAI,EAAC,GAAR;AAAY,YAAA,EAAE,EAAC,UAAf;AAA0B,YAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,CAAgB,oBAAhB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AApCwC,C,CAuC7C;;AACAI,MAAM,CAACC,OAAP,GAAiB,UAASb,KAAT,EAAgB;AAC7B,MAAI,CAACA,KAAK,CAACE,MAAN,CAAaY,OAAb,CAAqB,UAArB,CAAL,EAAuC;AACvC,QAAIC,SAAS,GAAGX,QAAQ,CAACY,sBAAT,CAAgC,kBAAhC,CAAhB;AACA,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,SAAS,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,UAAIE,YAAY,GAAGJ,SAAS,CAACE,CAAD,CAA5B;;AACA,UAAIE,YAAY,CAACb,SAAb,CAAuBc,QAAvB,CAAgC,MAAhC,CAAJ,EAA6C;AAC7CD,QAAAA,YAAY,CAACb,SAAb,CAAuBe,MAAvB,CAA8B,MAA9B;AACC;AACJ;AACA;AACJ,CAXD","sourcesContent":["import React, {Component} from 'react';\nimport './navbar.css';\n\nexport default class Navbar extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {value: props.value};\n    }\n\n    handleChange(event){\n        this.setState({value: event.target.value});\n    }\n    \n    toggleDropdown(){\n        \n        document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n    }\n\n    selectAlgo(id){\n        this.toggleDropdown();\n        document.getElementById(\"startButton\").innerHTML = id;\n        return;\n    }\n\n    render(){\n        return(\n            <div class=\"navbar\">\n                <div class=\"dropdown\">\n                    <button onClick={() => this.toggleDropdown()} class=\"dropbtn\">Select an Algorithm</button>\n                    <div id=\"myDropdown\" class=\"dropdown-content\">\n                        <a href=\"#\" id=\"dijkstraStart\" onClick={() => this.selectAlgo(\"Dijkstra's Algorithm\")}>Dijkstra's Algorithm</a>\n                        <a href=\"#\" id=\"astarStart\" onClick={() => this.selectAlgo(\"A* Search\")}>A* Search</a>\n                        <a href=\"#\" id=\"bfsStart\" onClick={() => this.selectAlgo(\"Breadth-First-Search\")}>BFS</a>\n                        <a href=\"#\" id=\"dfsStart\" onClick={() => this.selectAlgo(\"Depth-First-Search\")}>DFS</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}    \n// Close the dropdown menu if the user clicks outside of it\nwindow.onclick = function(event) {\n    if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n    var i;\n    for (i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n        if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n        }\n    }\n    }\n}"]},"metadata":{},"sourceType":"module"}