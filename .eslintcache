[{"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/index.js":"1","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/App.js":"2","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/navbar.jsx":"3","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/pathfindingVisualizer/pathfindingVisualizer.jsx":"4","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/algorithms/astar.js":"5","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/algorithms/dijkstra.js":"6","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/pathfindingVisualizer/Node/Node.jsx":"7","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/algorithms/unweightedSearch.js":"8"},{"size":167,"mtime":1609794319429,"results":"9","hashOfConfig":"10"},{"size":338,"mtime":1609796579757,"results":"11","hashOfConfig":"10"},{"size":1823,"mtime":1609879746812,"results":"12","hashOfConfig":"10"},{"size":8903,"mtime":1609880550930,"results":"13","hashOfConfig":"10"},{"size":6789,"mtime":1609831024209,"results":"14","hashOfConfig":"10"},{"size":2076,"mtime":1609830298898,"results":"15","hashOfConfig":"10"},{"size":732,"mtime":1609796579759,"results":"16","hashOfConfig":"10"},{"size":2346,"mtime":1609880283843,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1entc3h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/index.js",[],["39","40"],"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/App.js",[],"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/navbar.jsx",["41","42","43","44"],"import React, {Component} from 'react';\nimport './navbar.css';\n\nexport default class Navbar extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {value: props.value};\n    }\n\n    handleChange(event){\n        this.setState({value: event.target.value});\n    }\n    \n    toggleDropdown(){\n        \n        document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n    }\n\n    selectAlgo(id){\n        this.toggleDropdown();\n        document.getElementById(\"startButton\").innerHTML = id;\n        return;\n    }\n\n    render(){\n        return(\n            <div class=\"navbar\">\n                <div class=\"dropdown\">\n                    <button onClick={() => this.toggleDropdown()} class=\"dropbtn\">Select an Algorithm</button>\n                    <div id=\"myDropdown\" class=\"dropdown-content\">\n                        <a href=\"#\" id=\"dijkstraStart\" onClick={() => this.selectAlgo(\"Dijkstra's Algorithm\")}>Dijkstra's Algorithm</a>\n                        <a href=\"#\" id=\"astarStart\" onClick={() => this.selectAlgo(\"A* Search\")}>A* Search</a>\n                        <a href=\"#\" id=\"bfsStart\" onClick={() => this.selectAlgo(\"Breadth-First-Search\")}>BFS</a>\n                        <a href=\"#\" id=\"dfsStart\" onClick={() => this.selectAlgo(\"Depth-First-Search\")}>DFS</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}    \n// Close the dropdown menu if the user clicks outside of it\nwindow.onclick = function(event) {\n    if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n    var i;\n    for (i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n        if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n        }\n    }\n    }\n}","/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/pathfindingVisualizer/pathfindingVisualizer.jsx",["45"],"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/algorithms/astar.js",[],["46","47"],"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/algorithms/dijkstra.js",[],"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/pathfindingVisualizer/Node/Node.jsx",["48","49","50","51","52","53"],"import React, {Component} from 'react';\nimport './Node.css';\n\nexport default class Node extends Component {\n  render() {\n    const {\n      col,\n      isFinish,\n      isStart,\n      isWall,\n      onMouseDown,\n      onMouseEnter,\n      onMouseUp,\n      row,\n      g,\n      h,\n      f,\n      direction,\n      weight,\n      status\n    } = this.props;\n    const type = isFinish\n      ? 'node-finish'\n      : isStart\n      ? 'node-start'\n      : isWall\n      ? 'node-wall'\n      : '';\n\n    return (\n      <div\n        id={`node-${row}-${col}`}\n        className={`node ${type}`}\n        onMouseDown={() => onMouseDown(row, col)}\n        onMouseEnter={() => onMouseEnter(row, col)}\n        onMouseUp={() => onMouseUp()}></div>\n    );\n  }\n}",["54","55"],"/Users/johnfurlong/Documents/code/Projects/pathfinding-visualizer/pathfinding/src/algorithms/unweightedSearch.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":32,"column":25,"nodeType":"62","endLine":32,"endColumn":112},{"ruleId":"60","severity":1,"message":"61","line":33,"column":25,"nodeType":"62","endLine":33,"endColumn":98},{"ruleId":"60","severity":1,"message":"61","line":34,"column":25,"nodeType":"62","endLine":34,"endColumn":107},{"ruleId":"60","severity":1,"message":"61","line":35,"column":25,"nodeType":"62","endLine":35,"endColumn":105},{"ruleId":null,"fatal":true,"severity":2,"message":"63","line":134,"column":7},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":15,"column":7,"nodeType":"68","messageId":"69","endLine":15,"endColumn":8},{"ruleId":"66","severity":1,"message":"70","line":16,"column":7,"nodeType":"68","messageId":"69","endLine":16,"endColumn":8},{"ruleId":"66","severity":1,"message":"71","line":17,"column":7,"nodeType":"68","messageId":"69","endLine":17,"endColumn":8},{"ruleId":"66","severity":1,"message":"72","line":18,"column":7,"nodeType":"68","messageId":"69","endLine":18,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":19,"column":7,"nodeType":"68","messageId":"69","endLine":19,"endColumn":13},{"ruleId":"66","severity":1,"message":"74","line":20,"column":7,"nodeType":"68","messageId":"69","endLine":20,"endColumn":13},{"ruleId":"56","replacedBy":"75"},{"ruleId":"58","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 132 | \u001b[39m      \u001b[90m//   this.animateSearch(visited, path);\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 133 | \u001b[39m      \u001b[90m// }\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 134 | \u001b[39m      \u001b[36melse\u001b[39m{\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 135 | \u001b[39m        visited \u001b[33m=\u001b[39m unweightedSearch(nodes\u001b[33m,\u001b[39m start\u001b[33m,\u001b[39m goal\u001b[33m,\u001b[39m visited\u001b[33m,\u001b[39m grid\u001b[33m,\u001b[39m algo)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 136 | \u001b[39m        path \u001b[33m=\u001b[39m getPath(goal)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 137 | \u001b[39m        console\u001b[33m.\u001b[39mlog(algo\u001b[33m,\u001b[39m \u001b[32m\"Visited:\"\u001b[39m\u001b[33m,\u001b[39m visited)\u001b[33m;\u001b[39m\u001b[0m",["77"],["78"],"no-unused-vars","'g' is assigned a value but never used.","Identifier","unusedVar","'h' is assigned a value but never used.","'f' is assigned a value but never used.","'direction' is assigned a value but never used.","'weight' is assigned a value but never used.","'status' is assigned a value but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation"]